using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;



class Result
{

    /*
     * Complete the 'goodSegment' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY badNumbers
     *  2. INTEGER l
     *  3. INTEGER r
     */

    public static int goodSegment(List<int> badNumbers, int l, int r)
    {
        int output=0;
        int diff=0;
        int ind=0;
        int rm=0;
        
        badNumbers.Sort();
        foreach (int i in badNumbers){
            if (badNumbers.IndexOf(i)==badNumbers.Count-1&&i<r){
                rm=r-i;
            }
            else if (i==l||i==r){
                diff=0;
            }
            else if (l<i&&i<r){
                diff=i-l;
                l=i+1;
            }
            
            else if (i>r){
                ind=badNumbers.IndexOf(i);
                diff=r-badNumbers[ind-1];
            }
            if (output<diff){
                output=diff;
            }
            if (output<rm){
                output=rm;
            }
        }
        
        return output;
    }

}


class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int badNumbersCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> badNumbers = new List<int>();

        for (int i = 0; i < badNumbersCount; i++)
        {
            int badNumbersItem = Convert.ToInt32(Console.ReadLine().Trim());
            badNumbers.Add(badNumbersItem);
        }

        int l = Convert.ToInt32(Console.ReadLine().Trim());

        int r = Convert.ToInt32(Console.ReadLine().Trim());

        int result = Result.goodSegment(badNumbers, l, r);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
